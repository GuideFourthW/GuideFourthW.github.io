<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>GuideFourthW</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-10-13T14:16:37.641Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>GuideFourthW</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>竞猜M串N计算</title>
    <link href="http://yoursite.com/2019/08/18/%E7%AB%9E%E7%8C%9CM%E4%B8%B2N%E8%AE%A1%E7%AE%97/"/>
    <id>http://yoursite.com/2019/08/18/竞猜M串N计算/</id>
    <published>2019-08-17T16:35:13.000Z</published>
    <updated>2019-10-13T14:16:37.641Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>最近的工作中涉及到竞彩网站的投注金额和组合计算，耗费了一番时间解决了这个问题。在此分享一下自己的看法</p><p>(本文采用的是澳客的赛事选择支持多种玩法，竞彩官网并不支持多种玩法选择)</p><p><img src="/Users/gufan/Library/Application Support/typora-user-images/image-20191013164411869.png" alt="image-20191013164411869"></p><p>蓝色区域左侧是胜平负玩法，右侧是让球胜平负玩法。足球一共有5种玩法 ，篮球有4种玩法，计算规则相同。</p><p>底部红框，左侧是过关方式(可叠加,无冲突)，右侧是计算的金额(注数 <em> 2 </em> 倍数)，以及最高奖金显示。</p><p>过关方式：将m场比赛组成n注。</p><p>过关方式有两种情况</p><p>​        1:m串1(2串1,3串1,4串1,5串1以此类推，最多8串1)</p><p>​        2:m串n(3串3,3串4,4串4,4串5,4串6,4串11 最多8串247)  注意 只有n=1 或 n&gt;=m     </p><p>本文采用递归来计算排列组合，并根据竞彩网规则进行过滤。m串1：所有选择中找m个组成一个组合，m串n 先找m串1，在把把每个组合遍历计算 该玩法所对应的串1组合</p><p>规则：组合中不允许出现同场比赛多选，以及同种玩法进行的组合不允许重复</p><p>不允许出现同场比赛多选(比如出现12,123)</p><p>「</p><p>​        去掉排列组合里相同比赛的(根据比赛编号标记)</p><p>  」</p><p>同种玩法不允许重复(重复组合的产生原因：匹配出不含某个选择的组合 15 19 59 )</p><p>「</p><p>​        玩法首选的排列组合不需要去，玩法下其他的排列组合需要和玩法首选的排列组合去（即排列组合中如存在去重复标记，根据重复的产生原因 将完全不含去重复标记的组合去掉）</p><p>   」</p><p>（玩法指一场比赛里的一个玩法）</p><p>（比赛编号标记：一场比赛下的选择都打上比赛唯一标识)</p><p>（去重复标记：不是玩法的首选择都使用*标记，因其排列组合必然产生重复）</p><p>示例： <code>*3spfA</code>  鹿岛鹿角胜平负玩法胜选择 <code>1spfA</code>  鹿岛鹿角胜平负玩法平选择</p><p>案例代码</p><p>将数据过滤成需要的标记格式，本例前端传输的格式为 20190930001-3~spf^2.21(比赛后台编号-胜~胜平负玩法^赔率)</p><p>比赛编号+赔率用于奖金计算</p><p> ··</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String info = <span class="string">"20190930001-3~spf^2.21,1~spf^2.21,403~rq^4.95,401~rq^4.95|20190930002-3~spf^2.21,1~spf^2.21,403~rq^4.95,401~rq^4"</span> +</span><br><span class="line">                <span class="string">".95|20190930003-3~spf^2.21,1~spf^2.21,403~rq^4.95,401~rq^4.95|20190930004-3~spf^2.21,1~spf^2.21,403~rq^4.95,401~rq^4"</span> +</span><br><span class="line">                <span class="string">".95|20190930005-3~spf^2.21,1~spf^2.21,403~rq^4.95,401~rq^4.95|20190930006-3~spf^2.21,1~spf^2.21,403~rq^4.95,401~rq^4"</span> +</span><br><span class="line">                <span class="string">".95|20190930007-3~spf^2.21,1~spf^2.21,403~rq^4.95,401~rq^4.95|20190930008-3~spf^2.21,1~spf^2.21,403~rq^4.95,401~rq^4.95"</span>;</span><br><span class="line"><span class="comment">//        String info = "20190930001-3~spf^2.21,403~rq^4.95,401~rq^4.95|20190930002-3~spf^2.21|20190930003-3~spf^2.21";</span></span><br><span class="line">        FootballTicketImpl footballTicketImpl = <span class="keyword">new</span> FootballTicketImpl();</span><br><span class="line">        List&lt;String&gt; passTypes = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"><span class="comment">//        passTypes.add("2_1");passTypes.add("3_1");passTypes.add("4_1");</span></span><br><span class="line"><span class="comment">//        passTypes.add("5_1");passTypes.add("6_1");</span></span><br><span class="line"><span class="comment">//        passTypes.add("2_1");passTypes.add("3_1");passTypes.add("4_1");</span></span><br><span class="line"><span class="comment">//        passTypes.add("5_1");passTypes.add("6_1");</span></span><br><span class="line">        passTypes.add(<span class="string">"8_247"</span>);</span><br><span class="line">        Instant inst1 = Instant.now();</span><br><span class="line"><span class="comment">//        List&lt;LotOrderTicket&gt; ticketList = footballTicketImpl.ticketHandle(new OutTicketDTO(1231L, 23, 10059, 1, info,</span></span><br><span class="line"><span class="comment">//                passTypes));</span></span><br><span class="line"><span class="comment">//        System.out.println(ticketList.size());</span></span><br><span class="line"><span class="comment">//        for (LotOrderTicket temp:ticketList) &#123;</span></span><br><span class="line"><span class="comment">//            System.out.println(temp.toString());</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//      得出总注数</span></span><br><span class="line">        System.out.println(footballTicketImpl.getPourHandle(info, passTypes));</span><br><span class="line">        Instant inst2 = Instant.now();</span><br><span class="line">        System.out.println(<span class="string">"以毫秒计的时间差："</span> + Duration.between(inst1, inst2).toMillis());</span><br><span class="line">        System.out.println(<span class="string">"以秒计的时间差："</span> + Duration.between(inst1, inst2).getSeconds());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 、</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> info      下注信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> passTypes 过关方式</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> M串1或者M串N有几种组合（几注）</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"> <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getPourHandle</span><span class="params">(String info, List&lt;String&gt; passTypes)</span> </span>&#123;</span><br><span class="line">        List&lt;String&gt; result = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (String passType : passTypes) &#123;</span><br><span class="line">            String[] mWithn = passType.split(<span class="string">"_"</span>);</span><br><span class="line">            Integer m = Integer.parseInt(mWithn[<span class="number">0</span>]);</span><br><span class="line">            Integer n = Integer.parseInt(mWithn[<span class="number">1</span>]);</span><br><span class="line">            ArrayList&lt;String&gt; temp = matchTransform(info, m, <span class="keyword">null</span>, <span class="number">0</span>);</span><br><span class="line">            <span class="keyword">if</span> (temp == <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            String[] bet = temp.toArray(<span class="keyword">new</span> String[temp.size()]);</span><br><span class="line">            ArrayList&lt;String&gt; tmpArr = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">            Map&lt;String, String&gt; checkGroups = <span class="keyword">new</span> Hashtable&lt;&gt;();</span><br><span class="line">            ArrayList&lt;String&gt; groups = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">            combine(<span class="number">0</span>, m, bet, <span class="keyword">false</span>, checkGroups, tmpArr, groups);</span><br><span class="line">            ArrayList&lt;String&gt; processGroups = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">            processGroups.addAll(groups);</span><br><span class="line">            <span class="keyword">if</span> (n &gt; <span class="number">1</span>) &#123;</span><br><span class="line">                <span class="comment">//进入M串N</span></span><br><span class="line">                groups.clear();</span><br><span class="line">                passType = passType.replace(<span class="string">"_"</span>, <span class="string">"串"</span>);</span><br><span class="line">                <span class="keyword">for</span> (String match : processGroups) &#123;</span><br><span class="line">                    match = match.substring(<span class="number">1</span>, match.length() - <span class="number">1</span>);</span><br><span class="line">                    String[] CalculateN = match.split(<span class="string">","</span>);</span><br><span class="line">                    String[] a = splitFrom.get(passType);</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; a.length; i++) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (appearNumber(Arrays.toString(CalculateN), <span class="string">"\\*"</span>) == CalculateN.length) &#123;</span><br><span class="line"><span class="comment">//                        不需要去重复</span></span><br><span class="line">                            combine(<span class="number">0</span>, Integer.valueOf(String.valueOf(a[i].charAt(<span class="number">0</span>))), CalculateN, <span class="keyword">false</span>, checkGroups,</span><br><span class="line">                                    <span class="keyword">new</span> ArrayList&lt;String&gt;(), groups);</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">//                          需要去重复</span></span><br><span class="line">                            combine(<span class="number">0</span>, Integer.valueOf(String.valueOf(a[i].charAt(<span class="number">0</span>))), CalculateN, <span class="keyword">true</span>, checkGroups,</span><br><span class="line">                                    <span class="keyword">new</span> ArrayList&lt;String&gt;(), groups);</span><br><span class="line">                        &#125;</span><br><span class="line">                        i++;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                processGroups.clear();</span><br><span class="line">                processGroups.addAll(groups);</span><br><span class="line">            &#125;</span><br><span class="line">            result.addAll(processGroups);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result.size();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 递归计算排列组合</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> index       单组合中已经累积的元素</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> k           一个组合需要几个元素组成</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> arr         源</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> checkGroups 不含重复的排列组合列表(先去掉此校验，如运行一段时间无妨 则彻底去除它)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> tmpArr      本次组成的排列组合</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> groups      一种过关方式的结果</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">combine</span><span class="params">(<span class="keyword">int</span> index, <span class="keyword">int</span> k, String[] arr, <span class="keyword">boolean</span> repeat, Map&lt;String, String&gt; checkGroups,</span></span></span><br><span class="line"><span class="function"><span class="params">                               ArrayList&lt;String&gt; tmpArr, ArrayList&lt;String&gt; groups)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (k == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = index; i &lt; arr.length; i++) &#123;</span><br><span class="line">                tmpArr.add(arr[i]);</span><br><span class="line">                String isAdd = <span class="string">"add"</span>;</span><br><span class="line">                <span class="keyword">if</span> (repeat) &#123;</span><br><span class="line">                    <span class="comment">//</span></span><br><span class="line">                    isAdd = toRepeat(arr, checkGroups, tmpArr, isAdd);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    Map&lt;String, String&gt; map = <span class="keyword">new</span> Hashtable&lt;&gt;();</span><br><span class="line">                    String tmpStr = tmpArr.toString();</span><br><span class="line">                    String[] tmpArray = tmpStr.substring(<span class="number">0</span>, tmpStr.length() - <span class="number">1</span>).split(<span class="string">","</span>);</span><br><span class="line">                    <span class="keyword">for</span> (String temp : tmpArray) &#123;</span><br><span class="line">                        <span class="comment">//截取出组合中最后一个的比赛编号唯一标识存入集合</span></span><br><span class="line">                        String matchCode = String.valueOf(temp.charAt(temp.length() - <span class="number">1</span>));</span><br><span class="line">                        <span class="comment">//如已包含 则表示排列组合拥有相同比赛 不允添加</span></span><br><span class="line">                        <span class="keyword">if</span> (map.get(matchCode) != <span class="keyword">null</span>) &#123;</span><br><span class="line">                            isAdd = <span class="string">""</span>;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="comment">//Value无用，只用Key和HASH特性</span></span><br><span class="line">                        map.put(matchCode, matchCode);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (isAdd.equals(<span class="string">"add"</span>)) &#123;</span><br><span class="line"><span class="comment">//                    checkGroups.put(tmpArr.toString().replaceAll("\\*",""),tmpArr.toString().trim());</span></span><br><span class="line">                    groups.add(tmpArr.toString());</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">for</span> (Iterator it = tmpArr.iterator(); it.hasNext(); ) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (it.next().equals(arr[i]))</span><br><span class="line">                        it.remove();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (k &gt; <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = index; i &lt;= arr.length - k; i++) &#123;</span><br><span class="line">                tmpArr.add(arr[i]);</span><br><span class="line">                combine(i + <span class="number">1</span>, k - <span class="number">1</span>, arr, repeat, checkGroups, tmpArr, groups);</span><br><span class="line">                <span class="keyword">for</span> (Iterator it = tmpArr.iterator(); it.hasNext(); ) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (it.next().equals(arr[i]))</span><br><span class="line">                        it.remove();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 去除重复组合(同种玩法不允许重复)</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> arr         选择的内容</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> checkGroups 不含重复的排列组合列表(先去掉此校验，如运行一段时间无妨 则彻底去除它)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> tmpArr      本次组成的排列组合</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> isAdd       是否能够添加</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">toRepeat</span><span class="params">(String[] arr, Map&lt;String, String&gt; checkGroups,</span></span></span><br><span class="line"><span class="function"><span class="params">                                  ArrayList&lt;String&gt; tmpArr, String isAdd)</span> </span>&#123;</span><br><span class="line">        String b = tmpArr.toString().replaceAll(<span class="string">"\\*"</span>, <span class="string">""</span>);</span><br><span class="line">        <span class="comment">//去掉完全不含去重复标记的组合</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; arr.length; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (arr[j].indexOf(<span class="string">"*"</span>) == -<span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!tmpArr.toString().contains(arr[j])) &#123;</span><br><span class="line"><span class="comment">//                    if (checkGroups.get(b.trim())!=null)&#123;</span></span><br><span class="line">                    isAdd = <span class="string">""</span>;</span><br><span class="line">                    <span class="keyword">return</span> isAdd;</span><br><span class="line"><span class="comment">//                    &#125;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> isAdd;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> schemeNumber 下注信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> m            要求组的比赛数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> matchNumber  实体类映射参照（0：只计算注数，不需要映射。1：传票组合，需要映射）</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> schemeNumber 未处理的下注信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> Type         （计算注数：0，传票组合：1）</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 处理后的下注信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ArrayList&lt;String&gt; <span class="title">matchTransform</span><span class="params">(String schemeNumber, Integer m, Map&lt;String, String&gt; matchNumber,</span></span></span><br><span class="line"><span class="function"><span class="params">                                                   Integer Type)</span> </span>&#123;</span><br><span class="line">        ArrayList&lt;String&gt; matchTransform = <span class="keyword">new</span> ArrayList();</span><br><span class="line">        String[] matchs = schemeNumber.split(<span class="string">"\\|"</span>);</span><br><span class="line">        <span class="keyword">if</span> (matchs.length &lt; m) &#123;</span><br><span class="line">            <span class="comment">//不满足组M场比赛的要求</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; matchs.length; j++) &#123;</span><br><span class="line">            String match = matchs[j];</span><br><span class="line">            String matchArray[] = match.split(<span class="string">"-"</span>);</span><br><span class="line">            String matchHead = matchArray[<span class="number">0</span>];</span><br><span class="line">            String temp = matchArray[<span class="number">1</span>];</span><br><span class="line">            String[] matchPlayType = temp.split(<span class="string">","</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; matchPlayType.length; i++) &#123;</span><br><span class="line">                StringBuffer playMethod = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">                StringBuffer matchNumberValue = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">                String symbol = <span class="string">"-"</span>;</span><br><span class="line">                String[] temp2 = matchPlayType[i].split(<span class="string">"~"</span>);</span><br><span class="line">                String[] temp3 = temp2[<span class="number">1</span>].split(<span class="string">"\\^"</span>);</span><br><span class="line">                String odds = temp3[<span class="number">1</span>];</span><br><span class="line">                String playTypePart = temp3[<span class="number">0</span>];</span><br><span class="line">                String playType = temp2[<span class="number">0</span>] + playTypePart;</span><br><span class="line">                <span class="keyword">int</span> sum = appearNumber(matchTransform.toString(), playTypePart + letter[j]);</span><br><span class="line">                <span class="keyword">if</span> (sum == <span class="number">0</span>) &#123;</span><br><span class="line">                    playMethod.append(<span class="string">"*"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                playMethod.append(playType);</span><br><span class="line">                playMethod.append(letter[j]);</span><br><span class="line">                matchTransform.add(playMethod.toString());</span><br><span class="line">                <span class="keyword">if</span> (Type == <span class="number">1</span>) &#123;</span><br><span class="line">                    <span class="comment">//key = 是否包含重复选择,玩法，比赛编号唯一标识,value = 对阵信息+玩法与赔率</span></span><br><span class="line">                    matchNumberValue.append(matchHead).append(symbol).append(temp2[<span class="number">0</span>]).append(symbol).append(odds);</span><br><span class="line">                    matchNumber.put(playMethod.toString(), matchNumberValue.toString());</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> matchTransform;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取指定字符串出现的次数</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> srcText  源字符串</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> findText 要查找的字符串</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">appearNumber</span><span class="params">(String srcText, String findText)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        Pattern p = Pattern.compile(findText);</span><br><span class="line">        Matcher m = p.matcher(srcText);</span><br><span class="line">        <span class="keyword">while</span> (m.find()) &#123;</span><br><span class="line">            count++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Computers" scheme="http://yoursite.com/categories/Computers/"/>
    
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
</feed>
